#include <iostream>
#include <vector>
#include <string>
#include <cassert>

#include "tcpsocket.h"

std::string sumNumFromStr(std::string message){
    TcpSocket client;
    if (!client.connect("10.0.2.15", 5555)) return "";

    if (message.empty()) return "";

    client.send(message.c_str(), message.size());

    char buf[1024];
    int num_characters = client.recv(buf, 1024);

    return std::string(buf, num_characters);
}

void testServer() {
    // Тестирование обычной работы
    assert(sumNumFromStr("20 apples, 30 bananas, 15 peaches and 1 watermelon") == "66.000000");

    // Тестирование случая, когда в сообщении нет ничего кроме чисел
    assert(sumNumFromStr("11 22 22") == "55.000000");

    // Тестирование случая, когда в сообщении нет чисел
    assert(sumNumFromStr("qwe ewqasd zxc qwe") == "qwe ewqasd zxc qwe");

    // Тестирование отрицательных чисел
    assert(sumNumFromStr("5 -4 zxc") == "1.000000");

    // Тестирование чисел с плавающей точкой
    assert(sumNumFromStr(" 0.5 1.5 -0.35") == "1.650000");

    // Тестирование спец. символов
    assert(sumNumFromStr("_ / \n \0 . , ` @ \" : ; ) ( { } [ ] * % ? ! # №") == "_ / \n \0 . , ` @ \" : ; ) ( { } [ ] * % ? ! # №");

    // Тестирование функции перевода строки в число на сервере, в случае большого числа
    assert(sumNumFromStr("1111111111111111111111111111111") == "1111111111111111111111111111111");
	
	// Тестирование случая, когда в сообщении не поставили пробел между числом и словом
    assert(sumNumFromStr("1 1str") == "1.000000");
	
    // Тестирование переполнения буфера
    assert(sumNumFromStr("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                         "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111") ==
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
           "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");

    std::cout << "Function 'sumNumFromStr' is ok" << std::endl;
}

int main()
{
    testServer();
    return 0;
}
